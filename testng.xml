<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite name="Suite">
	<listeners>
		<listener class-name="saucedemo.utilities.ListenersUtil"></listener>
	</listeners>
	<test thread-count="5" name="Test">
		<!-- NOTE:
		If you wish to use params in your tests, you can use it this way:
		1. add the tag below of 'parameter' with 'name' & 'value' =
		<parameter name=""baseUrl" value="https://www.saucedemo.com/" />
		2. add @Parameters({"param-name"}) annotation infront of the method you want it in - to state which parameter testng.xml passes in !
		3. public void method(@Optional("X") String param-value) { // using the parameter of testNG & if no param passed, use x as default !
		4. System.out.println("Your given Param arg was:" + (param-name){ // again, using @parameter of RUN, passed into method as a var !!!
		Now, the baseUrl in not-relevant in my case, for I am using a dedicated properties file (residing in resources), for that purpose !!
		For my need, I added the Parameter (to be passed into base-test) to determine which Browser you wish to Run on (se below)...
		END of NOTE -->
		<parameter name="baseUrl" value="https://www.saucedemo.com/"/>
        <parameter name="browser" value="Chrome"/>
        <!-- <parameter name="browser" value="Edge"/> -->
        <!-- NOTE:
		After adding the parameter tag (for eample, with name="browser" & value="Chrome") -> to actually use it in a test:
		1. you should pass it on (in my case to BasePage), as @Parameters = the annotation states which parameter testng.xml passes for RUN:
		@Parameters({"browser"}) // take a dynamic param from testNG.xml (via RUN by MVN) - needs: import org.testng.annotations.Parameters;
		2. declare it as an argument in your method:
		public void setUp(@Optional("Chrome") String browser) { // browser = @parameter of RUN if no param passed, use chrome as default !!!
		NOTE that, there should be exact correlation of all 3: Params in TestNG file, @Parameters stated & the Arguments (within Method) !!!
		3. use it within the method as avariable...:
		switch (browser){ // the browser = @parameter RUN passed into method as a variable
		// switch case to support multi-browsers-selection - according to the relevant browser passed, its' driver is declared & initiated !
		END of NOTE - NOT relevant in this case for I am using a dedicated properties file (residing in resources! -->
		<classes>
			<!-- Add the Class (test) you wish to Run -->
			<class name="saucedemo.testcases.Test1_LoginAuthentication" />
			<class name="saucedemo.testcases.Test2_CommonMenu" />
		</classes>
		<!-- NOTE: if you like to run the tests by package, not class (not relevant in this case for no packages implemented), use:
		<packages>
			<package name=""/>
		</packages>
		-->
	</test> <!-- Test -->
</suite> <!-- Suite -->
